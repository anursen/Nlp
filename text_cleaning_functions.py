# -*- coding: utf-8 -*-
"""Text Cleaning Functions

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BV4Zls4ahCxS_KZdjBM7DOzbvMJHgqdv
"""

#cleaner()               ==> cleans, stems, 
#read_book()             ==> read a text book and returns it as a string
#count_words()           ==> Count words in a given text
#count_words_built_in()  ==> Couns words in a given text with built in iterator

def cleaner(text):
  import re
  import nltk
  nltk.download('stopwords')
  from nltk.corpus import stopwords
  from nltk.stem.porter import PorterStemmer
  
  
  corpus = []
  text = re.sub('[^a-zA-Z]', ' ', text)
  # convert all cases to lower cases
  text = text.lower()

  # split to array(default delimiter is " ")
  text = text.split()
	
	# creating PorterStemmer object to
	# take main stem of each word
  ps = PorterStemmer()

	# loop for stemming each word
	# in string array at ith row
  text = [ps.stem(word) for word in text if not word in set(stopwords.words('english'))]

	# rejoin all string array elements
	# to create back into a string
  
  text = ' '.join(text)
	# append each string to create
	# array of clean text
  
  corpus.append(text)
  return corpus

#read a book and return it as a string
def read_book(title_path):
	with open(title_path, "r", encoding ="utf8") as current_file:
		text = current_file.read()
		text = text.replace("\n", "").replace("\r", "")
	return text

from collections import Counter
# counts word frequency

def count_words(text):				
	uncountable_list = [".", ", ", ":", ";", "'", '"','\\ufeff']
	for character in uncountable_list:
		text = text.replace(character, "")
	word_counts = {}
	for word in text.split(" "):
		if word in word_counts:
			word_counts[word]+= 1
		else:
			word_counts[word]= 1
	return word_counts

	# >>>count_words(text) You can check the function

'''
# Counter from collections
This module implements specialized container datatypes providing alternatives to
Pythonâ€™s general purpose built-in containers, dict, list, set, and tuple.
 '''

def count_words_built_in(text):	
	text = text.lower()
	uncountable_list = [".", ", ", ":", ";", "'", '"']
	for character in uncountable_list:
		text = text.replace(character, "")
	word_counts = Counter(text.split(" "))
	return word_counts